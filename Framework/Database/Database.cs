// Do not modify this file. It's generated by Framework.Cli generate command.

namespace Database.dbo
{
    using Framework.DataAccessLayer;
    using System;

    [SqlTable("dbo", "FrameworkConfigField")]
    public class FrameworkConfigField : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("ConfigGridId", FrameworkTypeEnum.Int)]
        public int ConfigGridId { get; set; }

        [SqlField("FieldId", FrameworkTypeEnum.Int)]
        public int FieldId { get; set; }

        [SqlField("InstanceName", FrameworkTypeEnum.Nvarcahr)]
        public string InstanceName { get; set; }

        [SqlField("Text", FrameworkTypeEnum.Nvarcahr)]
        public string Text { get; set; }

        [SqlField("Description", FrameworkTypeEnum.Nvarcahr)]
        public string Description { get; set; }

        [SqlField("IsVisible", FrameworkTypeEnum.Bit)]
        public bool? IsVisible { get; set; }

        [SqlField("IsReadOnly", FrameworkTypeEnum.Bit)]
        public bool? IsReadOnly { get; set; }

        [SqlField("Width", FrameworkTypeEnum.Float)]
        public double? Width { get; set; }

        [SqlField("IsMultiline", FrameworkTypeEnum.Bit)]
        public bool? IsMultiline { get; set; }

        [SqlField("Sort", FrameworkTypeEnum.Float)]
        public double? Sort { get; set; }

        [SqlField("IsDelete", FrameworkTypeEnum.Bit)]
        public bool IsDelete { get; set; }
    }

    [SqlTable("dbo", "FrameworkConfigFieldDisplay")]
    public class FrameworkConfigFieldDisplay : Row
    {
        [SqlField("ConfigGridId", FrameworkTypeEnum.Int)]
        public int? ConfigGridId { get; set; }

        [SqlField("ConfigGridTableId", FrameworkTypeEnum.Int)]
        public int ConfigGridTableId { get; set; }

        [SqlField("ConfigGridTableIdName", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigGridTableIdName { get; set; }

        [SqlField("ConfigGridTableNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigGridTableNameCSharp { get; set; }

        [SqlField("ConfigGridConfigName", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigGridConfigName { get; set; }

        [SqlField("ConfigGridIsDelete", FrameworkTypeEnum.Bit)]
        public bool? ConfigGridIsDelete { get; set; }

        [SqlField("FieldId", FrameworkTypeEnum.Int)]
        public int FieldId { get; set; }

        [SqlField("FieldTableId", FrameworkTypeEnum.Int)]
        public int FieldTableId { get; set; }

        [SqlField("FieldFieldNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string FieldFieldNameCSharp { get; set; }

        [SqlField("FieldFieldNameSql", FrameworkTypeEnum.Nvarcahr)]
        public string FieldFieldNameSql { get; set; }

        [SqlField("FieldFieldSort", FrameworkTypeEnum.Int)]
        public int FieldFieldSort { get; set; }

        [SqlField("FieldIsDelete", FrameworkTypeEnum.Bit)]
        public bool FieldIsDelete { get; set; }

        [SqlField("ConfigFieldId", FrameworkTypeEnum.Int)]
        public int? ConfigFieldId { get; set; }

        [SqlField("ConfigFieldConfigGridId", FrameworkTypeEnum.Int)]
        public int? ConfigFieldConfigGridId { get; set; }

        [SqlField("ConfigFieldFieldId", FrameworkTypeEnum.Int)]
        public int? ConfigFieldFieldId { get; set; }

        [SqlField("ConfigFieldInstanceName", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigFieldInstanceName { get; set; }

        [SqlField("ConfigFieldText", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigFieldText { get; set; }

        [SqlField("ConfigFieldDescription", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigFieldDescription { get; set; }

        [SqlField("ConfigFieldIsVisible", FrameworkTypeEnum.Bit)]
        public bool? ConfigFieldIsVisible { get; set; }

        [SqlField("ConfigFieldIsReadOnly", FrameworkTypeEnum.Bit)]
        public bool? ConfigFieldIsReadOnly { get; set; }

        [SqlField("ConfigFieldWidth", FrameworkTypeEnum.Float)]
        public double? ConfigFieldWidth { get; set; }

        [SqlField("ConfigFieldIsMultiline", FrameworkTypeEnum.Bit)]
        public bool? ConfigFieldIsMultiline { get; set; }

        [SqlField("ConfigFieldSort", FrameworkTypeEnum.Float)]
        public double? ConfigFieldSort { get; set; }
    }

    [SqlTable("dbo", "FrameworkConfigFieldIntegrate")]
    public class FrameworkConfigFieldIntegrate : Row
    {
        [SqlField("Id", FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("ConfigGridId", FrameworkTypeEnum.Int)]
        public int ConfigGridId { get; set; }

        [SqlField("ConfigGridIdName", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigGridIdName { get; set; }

        [SqlField("FieldId", FrameworkTypeEnum.Int)]
        public int FieldId { get; set; }

        [SqlField("FieldIdName", FrameworkTypeEnum.Nvarcahr)]
        public string FieldIdName { get; set; }

        [SqlField("InstanceName", FrameworkTypeEnum.Nvarcahr)]
        public string InstanceName { get; set; }

        [SqlField("TableNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string TableNameCSharp { get; set; }

        [SqlField("ConfigName", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigName { get; set; }

        [SqlField("FieldNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string FieldNameCSharp { get; set; }

        [SqlField("Text", FrameworkTypeEnum.Nvarcahr)]
        public string Text { get; set; }

        [SqlField("Description", FrameworkTypeEnum.Nvarcahr)]
        public string Description { get; set; }

        [SqlField("IsVisible", FrameworkTypeEnum.Bit)]
        public bool? IsVisible { get; set; }

        [SqlField("IsReadOnly", FrameworkTypeEnum.Bit)]
        public bool? IsReadOnly { get; set; }

        [SqlField("Width", FrameworkTypeEnum.Float)]
        public double? Width { get; set; }

        [SqlField("IsMultiline", FrameworkTypeEnum.Bit)]
        public bool? IsMultiline { get; set; }

        [SqlField("Sort", FrameworkTypeEnum.Float)]
        public double? Sort { get; set; }

        [SqlField("IsDelete", FrameworkTypeEnum.Bit)]
        public bool IsDelete { get; set; }
    }

    [SqlTable("dbo", "FrameworkConfigGrid")]
    public class FrameworkConfigGrid : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("TableId", FrameworkTypeEnum.Int)]
        public int TableId { get; set; }

        [SqlField("ConfigName", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigName { get; set; }

        [SqlField("RowCountMax", FrameworkTypeEnum.Int)]
        public int? RowCountMax { get; set; }

        [SqlField("WidthMax", FrameworkTypeEnum.Float)]
        public double? WidthMax { get; set; }

        [SqlField("IsAllowInsert", FrameworkTypeEnum.Bit)]
        public bool? IsAllowInsert { get; set; }

        [SqlField("IsShowHeader", FrameworkTypeEnum.Bit)]
        public bool? IsShowHeader { get; set; }

        [SqlField("IsShowPagination", FrameworkTypeEnum.Bit)]
        public bool? IsShowPagination { get; set; }

        [SqlField("IsDelete", FrameworkTypeEnum.Bit)]
        public bool IsDelete { get; set; }
    }

    [SqlTable("dbo", "FrameworkConfigGridDisplay")]
    public class FrameworkConfigGridDisplay : Row
    {
        [SqlField("Id", FrameworkTypeEnum.Int)]
        public int? Id { get; set; }

        [SqlField("TableId", FrameworkTypeEnum.Int)]
        public int TableId { get; set; }

        [SqlField("TableNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string TableNameCSharp { get; set; }

        [SqlField("TableNameSql", FrameworkTypeEnum.Nvarcahr)]
        public string TableNameSql { get; set; }

        [SqlField("ConfigName", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigName { get; set; }

        [SqlField("RowCountMax", FrameworkTypeEnum.Int)]
        public int? RowCountMax { get; set; }

        [SqlField("WidthMax", FrameworkTypeEnum.Float)]
        public double? WidthMax { get; set; }

        [SqlField("IsAllowInsert", FrameworkTypeEnum.Bit)]
        public bool? IsAllowInsert { get; set; }

        [SqlField("IsShowHeader", FrameworkTypeEnum.Bit)]
        public bool? IsShowHeader { get; set; }

        [SqlField("IsShowPagination", FrameworkTypeEnum.Bit)]
        public bool? IsShowPagination { get; set; }

        [SqlField("IsDelete", FrameworkTypeEnum.Bit)]
        public bool? IsDelete { get; set; }
    }

    [SqlTable("dbo", "FrameworkConfigGridIntegrate")]
    public class FrameworkConfigGridIntegrate : Row
    {
        [SqlField("Id", FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("IdName", FrameworkTypeEnum.Nvarcahr)]
        public string IdName { get; set; }

        [SqlField("TableId", FrameworkTypeEnum.Int)]
        public int TableId { get; set; }

        [SqlField("TableIdName", FrameworkTypeEnum.Nvarcahr)]
        public string TableIdName { get; set; }

        [SqlField("TableNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string TableNameCSharp { get; set; }

        [SqlField("ConfigName", FrameworkTypeEnum.Nvarcahr)]
        public string ConfigName { get; set; }

        [SqlField("RowCountMax", FrameworkTypeEnum.Int)]
        public int? RowCountMax { get; set; }

        [SqlField("WidthMax", FrameworkTypeEnum.Float)]
        public double? WidthMax { get; set; }

        [SqlField("IsAllowInsert", FrameworkTypeEnum.Bit)]
        public bool? IsAllowInsert { get; set; }

        [SqlField("IsShowHeader", FrameworkTypeEnum.Bit)]
        public bool? IsShowHeader { get; set; }

        [SqlField("IsShowPagination", FrameworkTypeEnum.Bit)]
        public bool? IsShowPagination { get; set; }

        [SqlField("IsDelete", FrameworkTypeEnum.Bit)]
        public bool IsDelete { get; set; }
    }

    [SqlTable("dbo", "FrameworkDeployDb")]
    public class FrameworkDeployDb : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("FileName", FrameworkTypeEnum.Nvarcahr)]
        public string FileName { get; set; }

        [SqlField("Date", FrameworkTypeEnum.Datetime2)]
        public DateTime? Date { get; set; }
    }

    [SqlTable("dbo", "FrameworkField")]
    public class FrameworkField : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("TableId", FrameworkTypeEnum.Int)]
        public int TableId { get; set; }

        [SqlField("FieldNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string FieldNameCSharp { get; set; }

        [SqlField("FieldNameSql", FrameworkTypeEnum.Nvarcahr)]
        public string FieldNameSql { get; set; }

        [SqlField("Sort", FrameworkTypeEnum.Int)]
        public int Sort { get; set; }

        [SqlField("IsDelete", FrameworkTypeEnum.Bit)]
        public bool IsDelete { get; set; }
    }

    [SqlTable("dbo", "FrameworkFieldIntegrate")]
    public class FrameworkFieldIntegrate : Row
    {
        [SqlField("Id", FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("IdName", FrameworkTypeEnum.Nvarcahr)]
        public string IdName { get; set; }

        [SqlField("TableId", FrameworkTypeEnum.Int)]
        public int TableId { get; set; }

        [SqlField("TableIdName", FrameworkTypeEnum.Nvarcahr)]
        public string TableIdName { get; set; }

        [SqlField("FieldNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string FieldNameCSharp { get; set; }

        [SqlField("FieldNameSql", FrameworkTypeEnum.Nvarcahr)]
        public string FieldNameSql { get; set; }

        [SqlField("Sort", FrameworkTypeEnum.Int)]
        public int Sort { get; set; }

        [SqlField("IsDelete", FrameworkTypeEnum.Bit)]
        public bool IsDelete { get; set; }
    }

    [SqlTable("dbo", "FrameworkLanguage")]
    public class FrameworkLanguage : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("AppTypeName", FrameworkTypeEnum.Nvarcahr)]
        public string AppTypeName { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("TextHtml", FrameworkTypeEnum.Nvarcahr)]
        public string TextHtml { get; set; }
    }

    [SqlTable("dbo", "FrameworkLanguageApp")]
    public class FrameworkLanguageApp : Row
    {
        [SqlField("LanguageId", FrameworkTypeEnum.Int)]
        public int LanguageId { get; set; }

        [SqlField("LanguageAppTypeName", FrameworkTypeEnum.Nvarcahr)]
        public string LanguageAppTypeName { get; set; }

        [SqlField("LanguageName", FrameworkTypeEnum.Nvarcahr)]
        public string LanguageName { get; set; }

        [SqlField("ItemId", FrameworkTypeEnum.Int)]
        public int ItemId { get; set; }

        [SqlField("ItemName", FrameworkTypeEnum.Nvarcahr)]
        public string ItemName { get; set; }

        [SqlField("ItemTextDefault", FrameworkTypeEnum.Nvarcahr)]
        public string ItemTextDefault { get; set; }

        [SqlField("TextId", FrameworkTypeEnum.Int)]
        public int TextId { get; set; }

        [SqlField("TextText", FrameworkTypeEnum.Nvarcahr)]
        public string TextText { get; set; }
    }

    [SqlTable("dbo", "FrameworkLanguageDisplay")]
    public class FrameworkLanguageDisplay : Row
    {
        [SqlField("LanguageId", FrameworkTypeEnum.Int)]
        public int LanguageId { get; set; }

        [SqlField("LanguageAppTypeName", FrameworkTypeEnum.Nvarcahr)]
        public string LanguageAppTypeName { get; set; }

        [SqlField("LanguageName", FrameworkTypeEnum.Nvarcahr)]
        public string LanguageName { get; set; }

        [SqlField("ItemId", FrameworkTypeEnum.Int)]
        public int ItemId { get; set; }

        [SqlField("ItemName", FrameworkTypeEnum.Nvarcahr)]
        public string ItemName { get; set; }

        [SqlField("ItemTextDefault", FrameworkTypeEnum.Nvarcahr)]
        public string ItemTextDefault { get; set; }

        [SqlField("TextId", FrameworkTypeEnum.Int)]
        public int? TextId { get; set; }

        [SqlField("TextText", FrameworkTypeEnum.Nvarcahr)]
        public string TextText { get; set; }
    }

    [SqlTable("dbo", "FrameworkLanguageIntegrate")]
    public class FrameworkLanguageIntegrate : Row
    {
        [SqlField("Id", FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("AppTypeName", FrameworkTypeEnum.Nvarcahr)]
        public string AppTypeName { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("TextHtml", FrameworkTypeEnum.Nvarcahr)]
        public string TextHtml { get; set; }

        [SqlField("IdName", FrameworkTypeEnum.Nvarcahr)]
        public string IdName { get; set; }
    }

    [SqlTable("dbo", "FrameworkLanguageItem")]
    public class FrameworkLanguageItem : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("AppTypeName", FrameworkTypeEnum.Nvarcahr)]
        public string AppTypeName { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("TextDefault", FrameworkTypeEnum.Nvarcahr)]
        public string TextDefault { get; set; }
    }

    [SqlTable("dbo", "FrameworkLanguageItemIntegrate")]
    public class FrameworkLanguageItemIntegrate : Row
    {
        [SqlField("Id", FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("AppTypeName", FrameworkTypeEnum.Nvarcahr)]
        public string AppTypeName { get; set; }

        [SqlField("Name", FrameworkTypeEnum.Nvarcahr)]
        public string Name { get; set; }

        [SqlField("TextDefault", FrameworkTypeEnum.Nvarcahr)]
        public string TextDefault { get; set; }

        [SqlField("IdName", FrameworkTypeEnum.Nvarcahr)]
        public string IdName { get; set; }
    }

    [SqlTable("dbo", "FrameworkLanguageText")]
    public class FrameworkLanguageText : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("AppTypeName", FrameworkTypeEnum.Nvarcahr)]
        public string AppTypeName { get; set; }

        [SqlField("LanguageId", FrameworkTypeEnum.Int)]
        public int LanguageId { get; set; }

        [SqlField("ItemId", FrameworkTypeEnum.Int)]
        public int ItemId { get; set; }

        [SqlField("Text", FrameworkTypeEnum.Nvarcahr)]
        public string Text { get; set; }
    }

    [SqlTable("dbo", "FrameworkLanguageTextIntegrate")]
    public class FrameworkLanguageTextIntegrate : Row
    {
        [SqlField("Id", FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("AppTypeName", FrameworkTypeEnum.Nvarcahr)]
        public string AppTypeName { get; set; }

        [SqlField("LanguageId", FrameworkTypeEnum.Int)]
        public int LanguageId { get; set; }

        [SqlField("ItemId", FrameworkTypeEnum.Int)]
        public int ItemId { get; set; }

        [SqlField("Text", FrameworkTypeEnum.Nvarcahr)]
        public string Text { get; set; }

        [SqlField("LanguageIdName", FrameworkTypeEnum.Nvarcahr)]
        public string LanguageIdName { get; set; }

        [SqlField("ItemIdName", FrameworkTypeEnum.Nvarcahr)]
        public string ItemIdName { get; set; }
    }

    [SqlTable("dbo", "FrameworkTable")]
    public class FrameworkTable : Row
    {
        [SqlField("Id", true, FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("TableNameCSharp", FrameworkTypeEnum.Nvarcahr)]
        public string TableNameCSharp { get; set; }

        [SqlField("TableNameSql", FrameworkTypeEnum.Nvarcahr)]
        public string TableNameSql { get; set; }

        [SqlField("IsDelete", FrameworkTypeEnum.Bit)]
        public bool IsDelete { get; set; }
    }

    [SqlTable("dbo", "FrameworkTableIntegrate")]
    public class FrameworkTableIntegrate : Row
    {
        [SqlField("Id", FrameworkTypeEnum.Int)]
        public int Id { get; set; }

        [SqlField("IdName", FrameworkTypeEnum.Nvarcahr)]
        public string IdName { get; set; }
    }
}
