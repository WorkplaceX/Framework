// Do not modify this file. It's generated by Framework.Cli.

namespace Database.dbo
{
    using Framework.DataAccessLayer;
    using System;

    [SqlTable("dbo", "FrameworkApplication")]
    public class FrameworkApplication : Row
    {
        [SqlField("Id", typeof(FrameworkApplication_Id), true)]
        public int Id { get; set; }

        [SqlField("Text", typeof(FrameworkApplication_Text))]
        public string Text { get; set; }

        [SqlField("Path", typeof(FrameworkApplication_Path))]
        public string Path { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkApplication_ApplicationTypeId))]
        public int ApplicationTypeId { get; set; }

        [SqlField("IsActive", typeof(FrameworkApplication_IsActive))]
        public bool? IsActive { get; set; }
    }

    public class FrameworkApplication_Id : Cell<FrameworkApplication> { }

    public class FrameworkApplication_Text : Cell<FrameworkApplication> { }

    public class FrameworkApplication_Path : Cell<FrameworkApplication> { }

    public class FrameworkApplication_ApplicationTypeId : Cell<FrameworkApplication> { }

    public class FrameworkApplication_IsActive : Cell<FrameworkApplication> { }

    [SqlTable("dbo", "FrameworkApplicationDisplay")]
    public class FrameworkApplicationDisplay : Row
    {
        [SqlField("Id", typeof(FrameworkApplicationDisplay_Id))]
        public int Id { get; set; }

        [SqlField("Text", typeof(FrameworkApplicationDisplay_Text))]
        public string Text { get; set; }

        [SqlField("Path", typeof(FrameworkApplicationDisplay_Path))]
        public string Path { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkApplicationDisplay_ApplicationTypeId))]
        public int ApplicationTypeId { get; set; }

        [SqlField("TypeName", typeof(FrameworkApplicationDisplay_TypeName))]
        public string TypeName { get; set; }

        [SqlField("IsExist", typeof(FrameworkApplicationDisplay_IsExist))]
        public bool? IsExist { get; set; }

        [SqlField("IsActive", typeof(FrameworkApplicationDisplay_IsActive))]
        public bool? IsActive { get; set; }
    }

    public class FrameworkApplicationDisplay_Id : Cell<FrameworkApplicationDisplay> { }

    public class FrameworkApplicationDisplay_Text : Cell<FrameworkApplicationDisplay> { }

    public class FrameworkApplicationDisplay_Path : Cell<FrameworkApplicationDisplay> { }

    public class FrameworkApplicationDisplay_ApplicationTypeId : Cell<FrameworkApplicationDisplay> { }

    public class FrameworkApplicationDisplay_TypeName : Cell<FrameworkApplicationDisplay> { }

    public class FrameworkApplicationDisplay_IsExist : Cell<FrameworkApplicationDisplay> { }

    public class FrameworkApplicationDisplay_IsActive : Cell<FrameworkApplicationDisplay> { }

    [SqlTable("dbo", "FrameworkApplicationType")]
    public class FrameworkApplicationType : Row
    {
        [SqlField("Id", typeof(FrameworkApplicationType_Id), true)]
        public int Id { get; set; }

        [SqlField("TypeName", typeof(FrameworkApplicationType_TypeName))]
        public string TypeName { get; set; }

        [SqlField("IsExist", typeof(FrameworkApplicationType_IsExist))]
        public bool IsExist { get; set; }
    }

    public class FrameworkApplicationType_Id : Cell<FrameworkApplicationType> { }

    public class FrameworkApplicationType_TypeName : Cell<FrameworkApplicationType> { }

    public class FrameworkApplicationType_IsExist : Cell<FrameworkApplicationType> { }

    [SqlTable("dbo", "FrameworkColumn")]
    public class FrameworkColumn : Row
    {
        [SqlField("Id", typeof(FrameworkColumn_Id), true)]
        public int Id { get; set; }

        [SqlField("TableId", typeof(FrameworkColumn_TableId))]
        public int TableId { get; set; }

        [SqlField("ColumnNameCSharp", typeof(FrameworkColumn_ColumnNameCSharp))]
        public string ColumnNameCSharp { get; set; }

        [SqlField("ColumnNameSql", typeof(FrameworkColumn_ColumnNameSql))]
        public string ColumnNameSql { get; set; }

        [SqlField("IsExist", typeof(FrameworkColumn_IsExist))]
        public bool IsExist { get; set; }
    }

    public class FrameworkColumn_Id : Cell<FrameworkColumn> { }

    public class FrameworkColumn_TableId : Cell<FrameworkColumn> { }

    public class FrameworkColumn_ColumnNameCSharp : Cell<FrameworkColumn> { }

    public class FrameworkColumn_ColumnNameSql : Cell<FrameworkColumn> { }

    public class FrameworkColumn_IsExist : Cell<FrameworkColumn> { }

    [SqlTable("dbo", "FrameworkComponent")]
    public class FrameworkComponent : Row
    {
        [SqlField("Id", typeof(FrameworkComponent_Id), true)]
        public int Id { get; set; }

        [SqlField("ComponentNameCSharp", typeof(FrameworkComponent_ComponentNameCSharp))]
        public string ComponentNameCSharp { get; set; }

        [SqlField("IsPage", typeof(FrameworkComponent_IsPage))]
        public bool IsPage { get; set; }

        [SqlField("IsExist", typeof(FrameworkComponent_IsExist))]
        public bool IsExist { get; set; }
    }

    public class FrameworkComponent_Id : Cell<FrameworkComponent> { }

    public class FrameworkComponent_ComponentNameCSharp : Cell<FrameworkComponent> { }

    public class FrameworkComponent_IsPage : Cell<FrameworkComponent> { }

    public class FrameworkComponent_IsExist : Cell<FrameworkComponent> { }

    [SqlTable("dbo", "FrameworkConfigColumn")]
    public class FrameworkConfigColumn : Row
    {
        [SqlField("Id", typeof(FrameworkConfigColumn_Id), true)]
        public int Id { get; set; }

        [SqlField("GridId", typeof(FrameworkConfigColumn_GridId))]
        public int GridId { get; set; }

        [SqlField("ColumnId", typeof(FrameworkConfigColumn_ColumnId))]
        public int ColumnId { get; set; }

        [SqlField("TextDefault", typeof(FrameworkConfigColumn_TextDefault))]
        public string TextDefault { get; set; }

        [SqlField("Text", typeof(FrameworkConfigColumn_Text))]
        public string Text { get; set; }

        [SqlField("DescriptionDefault", typeof(FrameworkConfigColumn_DescriptionDefault))]
        public string DescriptionDefault { get; set; }

        [SqlField("Description", typeof(FrameworkConfigColumn_Description))]
        public string Description { get; set; }

        [SqlField("IsVisibleDefault", typeof(FrameworkConfigColumn_IsVisibleDefault))]
        public bool? IsVisibleDefault { get; set; }

        [SqlField("IsVisible", typeof(FrameworkConfigColumn_IsVisible))]
        public bool? IsVisible { get; set; }

        [SqlField("IsReadOnlyDefault", typeof(FrameworkConfigColumn_IsReadOnlyDefault))]
        public bool? IsReadOnlyDefault { get; set; }

        [SqlField("IsReadOnly", typeof(FrameworkConfigColumn_IsReadOnly))]
        public bool? IsReadOnly { get; set; }

        [SqlField("SortDefault", typeof(FrameworkConfigColumn_SortDefault))]
        public double? SortDefault { get; set; }

        [SqlField("Sort", typeof(FrameworkConfigColumn_Sort))]
        public double? Sort { get; set; }

        [SqlField("WidthPercentDefault", typeof(FrameworkConfigColumn_WidthPercentDefault))]
        public double? WidthPercentDefault { get; set; }

        [SqlField("WidthPercent", typeof(FrameworkConfigColumn_WidthPercent))]
        public double? WidthPercent { get; set; }
    }

    public class FrameworkConfigColumn_Id : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_GridId : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_ColumnId : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_TextDefault : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_Text : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_DescriptionDefault : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_Description : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_IsVisibleDefault : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_IsVisible : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_IsReadOnlyDefault : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_IsReadOnly : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_SortDefault : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_Sort : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_WidthPercentDefault : Cell<FrameworkConfigColumn> { }

    public class FrameworkConfigColumn_WidthPercent : Cell<FrameworkConfigColumn> { }

    [SqlTable("dbo", "FrameworkConfigColumnDisplay")]
    public class FrameworkConfigColumnDisplay : Row
    {
        [SqlField("GridId", typeof(FrameworkConfigColumnDisplay_GridId))]
        public int GridId { get; set; }

        [SqlField("GridName", typeof(FrameworkConfigColumnDisplay_GridName))]
        public string GridName { get; set; }

        [SqlField("GridIsExist", typeof(FrameworkConfigColumnDisplay_GridIsExist))]
        public bool GridIsExist { get; set; }

        [SqlField("TableId", typeof(FrameworkConfigColumnDisplay_TableId))]
        public int? TableId { get; set; }

        [SqlField("TableNameCSharp", typeof(FrameworkConfigColumnDisplay_TableNameCSharp))]
        public string TableNameCSharp { get; set; }

        [SqlField("TableNameSql", typeof(FrameworkConfigColumnDisplay_TableNameSql))]
        public string TableNameSql { get; set; }

        [SqlField("TableIsExist", typeof(FrameworkConfigColumnDisplay_TableIsExist))]
        public bool? TableIsExist { get; set; }

        [SqlField("ColumnId", typeof(FrameworkConfigColumnDisplay_ColumnId))]
        public int? ColumnId { get; set; }

        [SqlField("ColumnNameCSharp", typeof(FrameworkConfigColumnDisplay_ColumnNameCSharp))]
        public string ColumnNameCSharp { get; set; }

        [SqlField("ColumnNameSql", typeof(FrameworkConfigColumnDisplay_ColumnNameSql))]
        public string ColumnNameSql { get; set; }

        [SqlField("ColumnIsExist", typeof(FrameworkConfigColumnDisplay_ColumnIsExist))]
        public bool? ColumnIsExist { get; set; }

        [SqlField("ConfigId", typeof(FrameworkConfigColumnDisplay_ConfigId))]
        public int? ConfigId { get; set; }

        [SqlField("TextDefault", typeof(FrameworkConfigColumnDisplay_TextDefault))]
        public string TextDefault { get; set; }

        [SqlField("Text", typeof(FrameworkConfigColumnDisplay_Text))]
        public string Text { get; set; }

        [SqlField("DescriptionDefault", typeof(FrameworkConfigColumnDisplay_DescriptionDefault))]
        public string DescriptionDefault { get; set; }

        [SqlField("Description", typeof(FrameworkConfigColumnDisplay_Description))]
        public string Description { get; set; }

        [SqlField("IsVisibleDefault", typeof(FrameworkConfigColumnDisplay_IsVisibleDefault))]
        public bool? IsVisibleDefault { get; set; }

        [SqlField("IsVisible", typeof(FrameworkConfigColumnDisplay_IsVisible))]
        public bool? IsVisible { get; set; }

        [SqlField("IsReadOnlyDefault", typeof(FrameworkConfigColumnDisplay_IsReadOnlyDefault))]
        public bool? IsReadOnlyDefault { get; set; }

        [SqlField("IsReadOnly", typeof(FrameworkConfigColumnDisplay_IsReadOnly))]
        public bool? IsReadOnly { get; set; }

        [SqlField("SortDefault", typeof(FrameworkConfigColumnDisplay_SortDefault))]
        public double? SortDefault { get; set; }

        [SqlField("Sort", typeof(FrameworkConfigColumnDisplay_Sort))]
        public double? Sort { get; set; }

        [SqlField("WidthPercentDefault", typeof(FrameworkConfigColumnDisplay_WidthPercentDefault))]
        public double? WidthPercentDefault { get; set; }

        [SqlField("WidthPercent", typeof(FrameworkConfigColumnDisplay_WidthPercent))]
        public double? WidthPercent { get; set; }
    }

    public class FrameworkConfigColumnDisplay_GridId : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_GridName : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_GridIsExist : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_TableId : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_TableNameCSharp : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_TableNameSql : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_TableIsExist : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_ColumnId : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_ColumnNameCSharp : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_ColumnNameSql : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_ColumnIsExist : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_ConfigId : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_TextDefault : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_Text : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_DescriptionDefault : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_Description : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_IsVisibleDefault : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_IsVisible : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_IsReadOnlyDefault : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_IsReadOnly : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_SortDefault : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_Sort : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_WidthPercentDefault : Cell<FrameworkConfigColumnDisplay> { }

    public class FrameworkConfigColumnDisplay_WidthPercent : Cell<FrameworkConfigColumnDisplay> { }

    [SqlTable("dbo", "FrameworkConfigGrid")]
    public class FrameworkConfigGrid : Row
    {
        [SqlField("Id", typeof(FrameworkConfigGrid_Id), true)]
        public int Id { get; set; }

        [SqlField("GridId", typeof(FrameworkConfigGrid_GridId))]
        public int GridId { get; set; }

        [SqlField("PageRowCountDefault", typeof(FrameworkConfigGrid_PageRowCountDefault))]
        public int? PageRowCountDefault { get; set; }

        [SqlField("PageRowCount", typeof(FrameworkConfigGrid_PageRowCount))]
        public int? PageRowCount { get; set; }

        [SqlField("PageColumnCountDefault", typeof(FrameworkConfigGrid_PageColumnCountDefault))]
        public int? PageColumnCountDefault { get; set; }

        [SqlField("PageColumnCount", typeof(FrameworkConfigGrid_PageColumnCount))]
        public int? PageColumnCount { get; set; }

        [SqlField("IsInsertDefault", typeof(FrameworkConfigGrid_IsInsertDefault))]
        public bool? IsInsertDefault { get; set; }

        [SqlField("IsInsert", typeof(FrameworkConfigGrid_IsInsert))]
        public bool? IsInsert { get; set; }
    }

    public class FrameworkConfigGrid_Id : Cell<FrameworkConfigGrid> { }

    public class FrameworkConfigGrid_GridId : Cell<FrameworkConfigGrid> { }

    public class FrameworkConfigGrid_PageRowCountDefault : Cell<FrameworkConfigGrid> { }

    public class FrameworkConfigGrid_PageRowCount : Cell<FrameworkConfigGrid> { }

    public class FrameworkConfigGrid_PageColumnCountDefault : Cell<FrameworkConfigGrid> { }

    public class FrameworkConfigGrid_PageColumnCount : Cell<FrameworkConfigGrid> { }

    public class FrameworkConfigGrid_IsInsertDefault : Cell<FrameworkConfigGrid> { }

    public class FrameworkConfigGrid_IsInsert : Cell<FrameworkConfigGrid> { }

    [SqlTable("dbo", "FrameworkConfigGridDisplay")]
    public class FrameworkConfigGridDisplay : Row
    {
        [SqlField("GridId", typeof(FrameworkConfigGridDisplay_GridId))]
        public int GridId { get; set; }

        [SqlField("GridName", typeof(FrameworkConfigGridDisplay_GridName))]
        public string GridName { get; set; }

        [SqlField("GridIsExist", typeof(FrameworkConfigGridDisplay_GridIsExist))]
        public bool GridIsExist { get; set; }

        [SqlField("TableId", typeof(FrameworkConfigGridDisplay_TableId))]
        public int? TableId { get; set; }

        [SqlField("TableNameCSharp", typeof(FrameworkConfigGridDisplay_TableNameCSharp))]
        public string TableNameCSharp { get; set; }

        [SqlField("TableNameSql", typeof(FrameworkConfigGridDisplay_TableNameSql))]
        public string TableNameSql { get; set; }

        [SqlField("TableIsExist", typeof(FrameworkConfigGridDisplay_TableIsExist))]
        public bool? TableIsExist { get; set; }

        [SqlField("ConfigId", typeof(FrameworkConfigGridDisplay_ConfigId))]
        public int? ConfigId { get; set; }

        [SqlField("PageRowCountDefault", typeof(FrameworkConfigGridDisplay_PageRowCountDefault))]
        public int? PageRowCountDefault { get; set; }

        [SqlField("PageRowCount", typeof(FrameworkConfigGridDisplay_PageRowCount))]
        public int? PageRowCount { get; set; }

        [SqlField("PageColumnCountDefault", typeof(FrameworkConfigGridDisplay_PageColumnCountDefault))]
        public int? PageColumnCountDefault { get; set; }

        [SqlField("PageColumnCount", typeof(FrameworkConfigGridDisplay_PageColumnCount))]
        public int? PageColumnCount { get; set; }

        [SqlField("IsInsertDefault", typeof(FrameworkConfigGridDisplay_IsInsertDefault))]
        public bool? IsInsertDefault { get; set; }

        [SqlField("IsInsert", typeof(FrameworkConfigGridDisplay_IsInsert))]
        public bool? IsInsert { get; set; }
    }

    public class FrameworkConfigGridDisplay_GridId : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_GridName : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_GridIsExist : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_TableId : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_TableNameCSharp : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_TableNameSql : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_TableIsExist : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_ConfigId : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_PageRowCountDefault : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_PageRowCount : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_PageColumnCountDefault : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_PageColumnCount : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_IsInsertDefault : Cell<FrameworkConfigGridDisplay> { }

    public class FrameworkConfigGridDisplay_IsInsert : Cell<FrameworkConfigGridDisplay> { }

    [SqlTable("dbo", "FrameworkFileStorage")]
    public class FrameworkFileStorage : Row
    {
        [SqlField("Id", typeof(FrameworkFileStorage_Id), true)]
        public int Id { get; set; }

        [SqlField("ApplicationId", typeof(FrameworkFileStorage_ApplicationId))]
        public int? ApplicationId { get; set; }

        [SqlField("Name", typeof(FrameworkFileStorage_Name))]
        public string Name { get; set; }

        [SqlField("FileNameUpload", typeof(FrameworkFileStorage_FileNameUpload))]
        public string FileNameUpload { get; set; }

        [SqlField("Data", typeof(FrameworkFileStorage_Data))]
        public byte[] Data { get; set; }

        [SqlField("IsDelete", typeof(FrameworkFileStorage_IsDelete))]
        public bool? IsDelete { get; set; }
    }

    public class FrameworkFileStorage_Id : Cell<FrameworkFileStorage> { }

    public class FrameworkFileStorage_ApplicationId : Cell<FrameworkFileStorage> { }

    public class FrameworkFileStorage_Name : Cell<FrameworkFileStorage> { }

    public class FrameworkFileStorage_FileNameUpload : Cell<FrameworkFileStorage> { }

    public class FrameworkFileStorage_Data : Cell<FrameworkFileStorage> { }

    public class FrameworkFileStorage_IsDelete : Cell<FrameworkFileStorage> { }

    [SqlTable("dbo", "FrameworkGrid")]
    public class FrameworkGrid : Row
    {
        [SqlField("Id", typeof(FrameworkGrid_Id), true)]
        public int Id { get; set; }

        [SqlField("TableId", typeof(FrameworkGrid_TableId))]
        public int TableId { get; set; }

        [SqlField("GridName", typeof(FrameworkGrid_GridName))]
        public string GridName { get; set; }

        [SqlField("IsExist", typeof(FrameworkGrid_IsExist))]
        public bool IsExist { get; set; }
    }

    public class FrameworkGrid_Id : Cell<FrameworkGrid> { }

    public class FrameworkGrid_TableId : Cell<FrameworkGrid> { }

    public class FrameworkGrid_GridName : Cell<FrameworkGrid> { }

    public class FrameworkGrid_IsExist : Cell<FrameworkGrid> { }

    [SqlTable("dbo", "FrameworkLoginPermission")]
    public class FrameworkLoginPermission : Row
    {
        [SqlField("Id", typeof(FrameworkLoginPermission_Id), true)]
        public int Id { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkLoginPermission_ApplicationTypeId))]
        public int ApplicationTypeId { get; set; }

        [SqlField("PermissionName", typeof(FrameworkLoginPermission_PermissionName))]
        public string PermissionName { get; set; }

        [SqlField("Description", typeof(FrameworkLoginPermission_Description))]
        public string Description { get; set; }

        [SqlField("IsExist", typeof(FrameworkLoginPermission_IsExist))]
        public bool IsExist { get; set; }
    }

    public class FrameworkLoginPermission_Id : Cell<FrameworkLoginPermission> { }

    public class FrameworkLoginPermission_ApplicationTypeId : Cell<FrameworkLoginPermission> { }

    public class FrameworkLoginPermission_PermissionName : Cell<FrameworkLoginPermission> { }

    public class FrameworkLoginPermission_Description : Cell<FrameworkLoginPermission> { }

    public class FrameworkLoginPermission_IsExist : Cell<FrameworkLoginPermission> { }

    [SqlTable("dbo", "FrameworkLoginPermissionDisplay")]
    public class FrameworkLoginPermissionDisplay : Row
    {
        [SqlField("Id", typeof(FrameworkLoginPermissionDisplay_Id))]
        public int Id { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkLoginPermissionDisplay_ApplicationTypeId))]
        public int ApplicationTypeId { get; set; }

        [SqlField("ApplicationTypeName", typeof(FrameworkLoginPermissionDisplay_ApplicationTypeName))]
        public string ApplicationTypeName { get; set; }

        [SqlField("PermissionName", typeof(FrameworkLoginPermissionDisplay_PermissionName))]
        public string PermissionName { get; set; }

        [SqlField("Description", typeof(FrameworkLoginPermissionDisplay_Description))]
        public string Description { get; set; }

        [SqlField("IsExist", typeof(FrameworkLoginPermissionDisplay_IsExist))]
        public bool IsExist { get; set; }
    }

    public class FrameworkLoginPermissionDisplay_Id : Cell<FrameworkLoginPermissionDisplay> { }

    public class FrameworkLoginPermissionDisplay_ApplicationTypeId : Cell<FrameworkLoginPermissionDisplay> { }

    public class FrameworkLoginPermissionDisplay_ApplicationTypeName : Cell<FrameworkLoginPermissionDisplay> { }

    public class FrameworkLoginPermissionDisplay_PermissionName : Cell<FrameworkLoginPermissionDisplay> { }

    public class FrameworkLoginPermissionDisplay_Description : Cell<FrameworkLoginPermissionDisplay> { }

    public class FrameworkLoginPermissionDisplay_IsExist : Cell<FrameworkLoginPermissionDisplay> { }

    [SqlTable("dbo", "FrameworkLoginRole")]
    public class FrameworkLoginRole : Row
    {
        [SqlField("Id", typeof(FrameworkLoginRole_Id), true)]
        public int Id { get; set; }

        [SqlField("ApplicationId", typeof(FrameworkLoginRole_ApplicationId))]
        public int? ApplicationId { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkLoginRole_ApplicationTypeId))]
        public int? ApplicationTypeId { get; set; }

        [SqlField("RoleName", typeof(FrameworkLoginRole_RoleName))]
        public string RoleName { get; set; }

        [SqlField("Description", typeof(FrameworkLoginRole_Description))]
        public string Description { get; set; }

        [SqlField("IsBuiltIn", typeof(FrameworkLoginRole_IsBuiltIn))]
        public bool IsBuiltIn { get; set; }

        [SqlField("IsBuiltInExist", typeof(FrameworkLoginRole_IsBuiltInExist))]
        public bool IsBuiltInExist { get; set; }
    }

    public class FrameworkLoginRole_Id : Cell<FrameworkLoginRole> { }

    public class FrameworkLoginRole_ApplicationId : Cell<FrameworkLoginRole> { }

    public class FrameworkLoginRole_ApplicationTypeId : Cell<FrameworkLoginRole> { }

    public class FrameworkLoginRole_RoleName : Cell<FrameworkLoginRole> { }

    public class FrameworkLoginRole_Description : Cell<FrameworkLoginRole> { }

    public class FrameworkLoginRole_IsBuiltIn : Cell<FrameworkLoginRole> { }

    public class FrameworkLoginRole_IsBuiltInExist : Cell<FrameworkLoginRole> { }

    [SqlTable("dbo", "FrameworkLoginRoleDisplay")]
    public class FrameworkLoginRoleDisplay : Row
    {
        [SqlField("Id", typeof(FrameworkLoginRoleDisplay_Id))]
        public int Id { get; set; }

        [SqlField("ApplicationId", typeof(FrameworkLoginRoleDisplay_ApplicationId))]
        public int? ApplicationId { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkLoginRoleDisplay_ApplicationTypeId))]
        public int? ApplicationTypeId { get; set; }

        [SqlField("ApplicationTypeName", typeof(FrameworkLoginRoleDisplay_ApplicationTypeName))]
        public string ApplicationTypeName { get; set; }

        [SqlField("RoleName", typeof(FrameworkLoginRoleDisplay_RoleName))]
        public string RoleName { get; set; }

        [SqlField("Description", typeof(FrameworkLoginRoleDisplay_Description))]
        public string Description { get; set; }

        [SqlField("IsBuiltIn", typeof(FrameworkLoginRoleDisplay_IsBuiltIn))]
        public bool IsBuiltIn { get; set; }

        [SqlField("IsBuiltInExist", typeof(FrameworkLoginRoleDisplay_IsBuiltInExist))]
        public bool IsBuiltInExist { get; set; }
    }

    public class FrameworkLoginRoleDisplay_Id : Cell<FrameworkLoginRoleDisplay> { }

    public class FrameworkLoginRoleDisplay_ApplicationId : Cell<FrameworkLoginRoleDisplay> { }

    public class FrameworkLoginRoleDisplay_ApplicationTypeId : Cell<FrameworkLoginRoleDisplay> { }

    public class FrameworkLoginRoleDisplay_ApplicationTypeName : Cell<FrameworkLoginRoleDisplay> { }

    public class FrameworkLoginRoleDisplay_RoleName : Cell<FrameworkLoginRoleDisplay> { }

    public class FrameworkLoginRoleDisplay_Description : Cell<FrameworkLoginRoleDisplay> { }

    public class FrameworkLoginRoleDisplay_IsBuiltIn : Cell<FrameworkLoginRoleDisplay> { }

    public class FrameworkLoginRoleDisplay_IsBuiltInExist : Cell<FrameworkLoginRoleDisplay> { }

    [SqlTable("dbo", "FrameworkLoginRolePermission")]
    public class FrameworkLoginRolePermission : Row
    {
        [SqlField("Id", typeof(FrameworkLoginRolePermission_Id), true)]
        public int Id { get; set; }

        [SqlField("RoleId", typeof(FrameworkLoginRolePermission_RoleId))]
        public int RoleId { get; set; }

        [SqlField("PermissionId", typeof(FrameworkLoginRolePermission_PermissionId))]
        public int PermissionId { get; set; }

        [SqlField("IsBuiltIn", typeof(FrameworkLoginRolePermission_IsBuiltIn))]
        public bool IsBuiltIn { get; set; }

        [SqlField("IsActive", typeof(FrameworkLoginRolePermission_IsActive))]
        public bool IsActive { get; set; }
    }

    public class FrameworkLoginRolePermission_Id : Cell<FrameworkLoginRolePermission> { }

    public class FrameworkLoginRolePermission_RoleId : Cell<FrameworkLoginRolePermission> { }

    public class FrameworkLoginRolePermission_PermissionId : Cell<FrameworkLoginRolePermission> { }

    public class FrameworkLoginRolePermission_IsBuiltIn : Cell<FrameworkLoginRolePermission> { }

    public class FrameworkLoginRolePermission_IsActive : Cell<FrameworkLoginRolePermission> { }

    [SqlTable("dbo", "FrameworkLoginRolePermissionDisplay")]
    public class FrameworkLoginRolePermissionDisplay : Row
    {
        [SqlField("Id", typeof(FrameworkLoginRolePermissionDisplay_Id))]
        public int Id { get; set; }

        [SqlField("RoleId", typeof(FrameworkLoginRolePermissionDisplay_RoleId))]
        public int RoleId { get; set; }

        [SqlField("PermissionId", typeof(FrameworkLoginRolePermissionDisplay_PermissionId))]
        public int PermissionId { get; set; }

        [SqlField("IsBuiltIn", typeof(FrameworkLoginRolePermissionDisplay_IsBuiltIn))]
        public bool IsBuiltIn { get; set; }

        [SqlField("IsActive", typeof(FrameworkLoginRolePermissionDisplay_IsActive))]
        public bool IsActive { get; set; }

        [SqlField("RoleRoleId", typeof(FrameworkLoginRolePermissionDisplay_RoleRoleId))]
        public int? RoleRoleId { get; set; }

        [SqlField("RoleRoleName", typeof(FrameworkLoginRolePermissionDisplay_RoleRoleName))]
        public string RoleRoleName { get; set; }

        [SqlField("RoleIsBuiltIn", typeof(FrameworkLoginRolePermissionDisplay_RoleIsBuiltIn))]
        public bool? RoleIsBuiltIn { get; set; }

        [SqlField("RoleIsBuiltInExist", typeof(FrameworkLoginRolePermissionDisplay_RoleIsBuiltInExist))]
        public bool? RoleIsBuiltInExist { get; set; }

        [SqlField("PermissionPermissionId", typeof(FrameworkLoginRolePermissionDisplay_PermissionPermissionId))]
        public int? PermissionPermissionId { get; set; }

        [SqlField("PermissionPermissionName", typeof(FrameworkLoginRolePermissionDisplay_PermissionPermissionName))]
        public string PermissionPermissionName { get; set; }

        [SqlField("PermissionIsExist", typeof(FrameworkLoginRolePermissionDisplay_PermissionIsExist))]
        public bool? PermissionIsExist { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkLoginRolePermissionDisplay_ApplicationTypeId))]
        public int ApplicationTypeId { get; set; }

        [SqlField("ApplicationTypeTypeName", typeof(FrameworkLoginRolePermissionDisplay_ApplicationTypeTypeName))]
        public string ApplicationTypeTypeName { get; set; }
    }

    public class FrameworkLoginRolePermissionDisplay_Id : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_RoleId : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_PermissionId : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_IsBuiltIn : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_IsActive : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_RoleRoleId : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_RoleRoleName : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_RoleIsBuiltIn : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_RoleIsBuiltInExist : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_PermissionPermissionId : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_PermissionPermissionName : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_PermissionIsExist : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_ApplicationTypeId : Cell<FrameworkLoginRolePermissionDisplay> { }

    public class FrameworkLoginRolePermissionDisplay_ApplicationTypeTypeName : Cell<FrameworkLoginRolePermissionDisplay> { }

    [SqlTable("dbo", "FrameworkLoginUser")]
    public class FrameworkLoginUser : Row
    {
        [SqlField("Id", typeof(FrameworkLoginUser_Id), true)]
        public int Id { get; set; }

        [SqlField("ApplicationId", typeof(FrameworkLoginUser_ApplicationId))]
        public int? ApplicationId { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkLoginUser_ApplicationTypeId))]
        public int? ApplicationTypeId { get; set; }

        [SqlField("UserName", typeof(FrameworkLoginUser_UserName))]
        public string UserName { get; set; }

        [SqlField("Password", typeof(FrameworkLoginUser_Password))]
        public string Password { get; set; }

        [SqlField("IsBuiltIn", typeof(FrameworkLoginUser_IsBuiltIn))]
        public bool IsBuiltIn { get; set; }

        [SqlField("IsBuiltInExist", typeof(FrameworkLoginUser_IsBuiltInExist))]
        public bool IsBuiltInExist { get; set; }
    }

    public class FrameworkLoginUser_Id : Cell<FrameworkLoginUser> { }

    public class FrameworkLoginUser_ApplicationId : Cell<FrameworkLoginUser> { }

    public class FrameworkLoginUser_ApplicationTypeId : Cell<FrameworkLoginUser> { }

    public class FrameworkLoginUser_UserName : Cell<FrameworkLoginUser> { }

    public class FrameworkLoginUser_Password : Cell<FrameworkLoginUser> { }

    public class FrameworkLoginUser_IsBuiltIn : Cell<FrameworkLoginUser> { }

    public class FrameworkLoginUser_IsBuiltInExist : Cell<FrameworkLoginUser> { }

    [SqlTable("dbo", "FrameworkLoginUserDisplay")]
    public class FrameworkLoginUserDisplay : Row
    {
        [SqlField("Id", typeof(FrameworkLoginUserDisplay_Id))]
        public int Id { get; set; }

        [SqlField("ApplicationId", typeof(FrameworkLoginUserDisplay_ApplicationId))]
        public int? ApplicationId { get; set; }

        [SqlField("ApplicationText", typeof(FrameworkLoginUserDisplay_ApplicationText))]
        public string ApplicationText { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkLoginUserDisplay_ApplicationTypeId))]
        public int? ApplicationTypeId { get; set; }

        [SqlField("ApplicationTypeName", typeof(FrameworkLoginUserDisplay_ApplicationTypeName))]
        public string ApplicationTypeName { get; set; }

        [SqlField("UserName", typeof(FrameworkLoginUserDisplay_UserName))]
        public string UserName { get; set; }

        [SqlField("Password", typeof(FrameworkLoginUserDisplay_Password))]
        public string Password { get; set; }

        [SqlField("IsBuiltIn", typeof(FrameworkLoginUserDisplay_IsBuiltIn))]
        public bool IsBuiltIn { get; set; }

        [SqlField("IsBuiltInExist", typeof(FrameworkLoginUserDisplay_IsBuiltInExist))]
        public bool IsBuiltInExist { get; set; }
    }

    public class FrameworkLoginUserDisplay_Id : Cell<FrameworkLoginUserDisplay> { }

    public class FrameworkLoginUserDisplay_ApplicationId : Cell<FrameworkLoginUserDisplay> { }

    public class FrameworkLoginUserDisplay_ApplicationText : Cell<FrameworkLoginUserDisplay> { }

    public class FrameworkLoginUserDisplay_ApplicationTypeId : Cell<FrameworkLoginUserDisplay> { }

    public class FrameworkLoginUserDisplay_ApplicationTypeName : Cell<FrameworkLoginUserDisplay> { }

    public class FrameworkLoginUserDisplay_UserName : Cell<FrameworkLoginUserDisplay> { }

    public class FrameworkLoginUserDisplay_Password : Cell<FrameworkLoginUserDisplay> { }

    public class FrameworkLoginUserDisplay_IsBuiltIn : Cell<FrameworkLoginUserDisplay> { }

    public class FrameworkLoginUserDisplay_IsBuiltInExist : Cell<FrameworkLoginUserDisplay> { }

    [SqlTable("dbo", "FrameworkLoginUserRole")]
    public class FrameworkLoginUserRole : Row
    {
        [SqlField("Id", typeof(FrameworkLoginUserRole_Id), true)]
        public int Id { get; set; }

        [SqlField("UserId", typeof(FrameworkLoginUserRole_UserId))]
        public int UserId { get; set; }

        [SqlField("RoleId", typeof(FrameworkLoginUserRole_RoleId))]
        public int RoleId { get; set; }

        [SqlField("IsBuiltIn", typeof(FrameworkLoginUserRole_IsBuiltIn))]
        public bool IsBuiltIn { get; set; }

        [SqlField("IsActive", typeof(FrameworkLoginUserRole_IsActive))]
        public bool IsActive { get; set; }
    }

    public class FrameworkLoginUserRole_Id : Cell<FrameworkLoginUserRole> { }

    public class FrameworkLoginUserRole_UserId : Cell<FrameworkLoginUserRole> { }

    public class FrameworkLoginUserRole_RoleId : Cell<FrameworkLoginUserRole> { }

    public class FrameworkLoginUserRole_IsBuiltIn : Cell<FrameworkLoginUserRole> { }

    public class FrameworkLoginUserRole_IsActive : Cell<FrameworkLoginUserRole> { }

    [SqlTable("dbo", "FrameworkLoginUserRoleDisplay")]
    public class FrameworkLoginUserRoleDisplay : Row
    {
        [SqlField("Id", typeof(FrameworkLoginUserRoleDisplay_Id))]
        public int Id { get; set; }

        [SqlField("UserId", typeof(FrameworkLoginUserRoleDisplay_UserId))]
        public int UserId { get; set; }

        [SqlField("UserName", typeof(FrameworkLoginUserRoleDisplay_UserName))]
        public string UserName { get; set; }

        [SqlField("RoleId", typeof(FrameworkLoginUserRoleDisplay_RoleId))]
        public int RoleId { get; set; }

        [SqlField("RoleName", typeof(FrameworkLoginUserRoleDisplay_RoleName))]
        public string RoleName { get; set; }

        [SqlField("RoleDescription", typeof(FrameworkLoginUserRoleDisplay_RoleDescription))]
        public string RoleDescription { get; set; }

        [SqlField("IsBuiltIn", typeof(FrameworkLoginUserRoleDisplay_IsBuiltIn))]
        public bool IsBuiltIn { get; set; }

        [SqlField("IsActive", typeof(FrameworkLoginUserRoleDisplay_IsActive))]
        public bool IsActive { get; set; }

        [SqlField("Text", typeof(FrameworkLoginUserRoleDisplay_Text))]
        public string Text { get; set; }

        [SqlField("ApplicationTypeName", typeof(FrameworkLoginUserRoleDisplay_ApplicationTypeName))]
        public string ApplicationTypeName { get; set; }
    }

    public class FrameworkLoginUserRoleDisplay_Id : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_UserId : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_UserName : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_RoleId : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_RoleName : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_RoleDescription : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_IsBuiltIn : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_IsActive : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_Text : Cell<FrameworkLoginUserRoleDisplay> { }

    public class FrameworkLoginUserRoleDisplay_ApplicationTypeName : Cell<FrameworkLoginUserRoleDisplay> { }

    [SqlTable("dbo", "FrameworkLoginUserRolePermissionDisplay")]
    public class FrameworkLoginUserRolePermissionDisplay : Row
    {
        [SqlField("UserId", typeof(FrameworkLoginUserRolePermissionDisplay_UserId))]
        public int UserId { get; set; }

        [SqlField("UserIsBuiltIn", typeof(FrameworkLoginUserRolePermissionDisplay_UserIsBuiltIn))]
        public bool UserIsBuiltIn { get; set; }

        [SqlField("UserIsBuiltInExist", typeof(FrameworkLoginUserRolePermissionDisplay_UserIsBuiltInExist))]
        public bool UserIsBuiltInExist { get; set; }

        [SqlField("ApplicationId", typeof(FrameworkLoginUserRolePermissionDisplay_ApplicationId))]
        public int? ApplicationId { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkLoginUserRolePermissionDisplay_ApplicationTypeId))]
        public int? ApplicationTypeId { get; set; }

        [SqlField("ApplicationTypeName", typeof(FrameworkLoginUserRolePermissionDisplay_ApplicationTypeName))]
        public string ApplicationTypeName { get; set; }

        [SqlField("RoleId", typeof(FrameworkLoginUserRolePermissionDisplay_RoleId))]
        public int? RoleId { get; set; }

        [SqlField("RoleName", typeof(FrameworkLoginUserRolePermissionDisplay_RoleName))]
        public string RoleName { get; set; }

        [SqlField("PermissionId", typeof(FrameworkLoginUserRolePermissionDisplay_PermissionId))]
        public int? PermissionId { get; set; }

        [SqlField("PermissionName", typeof(FrameworkLoginUserRolePermissionDisplay_PermissionName))]
        public string PermissionName { get; set; }

        [SqlField("IsExist", typeof(FrameworkLoginUserRolePermissionDisplay_IsExist))]
        public bool? IsExist { get; set; }
    }

    public class FrameworkLoginUserRolePermissionDisplay_UserId : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_UserIsBuiltIn : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_UserIsBuiltInExist : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_ApplicationId : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_ApplicationTypeId : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_ApplicationTypeName : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_RoleId : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_RoleName : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_PermissionId : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_PermissionName : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    public class FrameworkLoginUserRolePermissionDisplay_IsExist : Cell<FrameworkLoginUserRolePermissionDisplay> { }

    [SqlTable("dbo", "FrameworkNavigation")]
    public class FrameworkNavigation : Row
    {
        [SqlField("Id", typeof(FrameworkNavigation_Id), true)]
        public int Id { get; set; }

        [SqlField("Text", typeof(FrameworkNavigation_Text))]
        public string Text { get; set; }

        [SqlField("ComponentId", typeof(FrameworkNavigation_ComponentId))]
        public int? ComponentId { get; set; }
    }

    public class FrameworkNavigation_Id : Cell<FrameworkNavigation> { }

    public class FrameworkNavigation_Text : Cell<FrameworkNavigation> { }

    public class FrameworkNavigation_ComponentId : Cell<FrameworkNavigation> { }

    [SqlTable("dbo", "FrameworkNavigationDisplay")]
    public class FrameworkNavigationDisplay : Row
    {
        [SqlField("Id", typeof(FrameworkNavigationDisplay_Id))]
        public int Id { get; set; }

        [SqlField("Text", typeof(FrameworkNavigationDisplay_Text))]
        public string Text { get; set; }

        [SqlField("ComponentId", typeof(FrameworkNavigationDisplay_ComponentId))]
        public int? ComponentId { get; set; }

        [SqlField("ComponentNameCSharp", typeof(FrameworkNavigationDisplay_ComponentNameCSharp))]
        public string ComponentNameCSharp { get; set; }
    }

    public class FrameworkNavigationDisplay_Id : Cell<FrameworkNavigationDisplay> { }

    public class FrameworkNavigationDisplay_Text : Cell<FrameworkNavigationDisplay> { }

    public class FrameworkNavigationDisplay_ComponentId : Cell<FrameworkNavigationDisplay> { }

    public class FrameworkNavigationDisplay_ComponentNameCSharp : Cell<FrameworkNavigationDisplay> { }

    [SqlTable("dbo", "FrameworkScript")]
    public class FrameworkScript : Row
    {
        [SqlField("Id", typeof(FrameworkScript_Id), true)]
        public int Id { get; set; }

        [SqlField("Name", typeof(FrameworkScript_Name))]
        public string Name { get; set; }

        [SqlField("IsExist", typeof(FrameworkScript_IsExist))]
        public bool IsExist { get; set; }

        [SqlField("IsRun", typeof(FrameworkScript_IsRun))]
        public bool IsRun { get; set; }

        [SqlField("DateCreate", typeof(FrameworkScript_DateCreate))]
        public DateTime? DateCreate { get; set; }

        [SqlField("DateDrop", typeof(FrameworkScript_DateDrop))]
        public DateTime? DateDrop { get; set; }
    }

    public class FrameworkScript_Id : Cell<FrameworkScript> { }

    public class FrameworkScript_Name : Cell<FrameworkScript> { }

    public class FrameworkScript_IsExist : Cell<FrameworkScript> { }

    public class FrameworkScript_IsRun : Cell<FrameworkScript> { }

    public class FrameworkScript_DateCreate : Cell<FrameworkScript> { }

    public class FrameworkScript_DateDrop : Cell<FrameworkScript> { }

    [SqlTable("dbo", "FrameworkSession")]
    public class FrameworkSession : Row
    {
        [SqlField("Id", typeof(FrameworkSession_Id), true)]
        public int Id { get; set; }

        [SqlField("Session", typeof(FrameworkSession_Session))]
        public Guid Session { get; set; }

        [SqlField("ApplicationId", typeof(FrameworkSession_ApplicationId))]
        public int ApplicationId { get; set; }

        [SqlField("UserId", typeof(FrameworkSession_UserId))]
        public int UserId { get; set; }
    }

    public class FrameworkSession_Id : Cell<FrameworkSession> { }

    public class FrameworkSession_Session : Cell<FrameworkSession> { }

    public class FrameworkSession_ApplicationId : Cell<FrameworkSession> { }

    public class FrameworkSession_UserId : Cell<FrameworkSession> { }

    [SqlTable("dbo", "FrameworkSessionPermissionDisplay")]
    public class FrameworkSessionPermissionDisplay : Row
    {
        [SqlField("SessionId", typeof(FrameworkSessionPermissionDisplay_SessionId))]
        public int SessionId { get; set; }

        [SqlField("Session", typeof(FrameworkSessionPermissionDisplay_Session))]
        public Guid Session { get; set; }

        [SqlField("UserId", typeof(FrameworkSessionPermissionDisplay_UserId))]
        public int UserId { get; set; }

        [SqlField("UserName", typeof(FrameworkSessionPermissionDisplay_UserName))]
        public string UserName { get; set; }

        [SqlField("UserIsBuiltIn", typeof(FrameworkSessionPermissionDisplay_UserIsBuiltIn))]
        public bool? UserIsBuiltIn { get; set; }

        [SqlField("UserIsBuiltInExist", typeof(FrameworkSessionPermissionDisplay_UserIsBuiltInExist))]
        public bool? UserIsBuiltInExist { get; set; }

        [SqlField("ApplicationId", typeof(FrameworkSessionPermissionDisplay_ApplicationId))]
        public int? ApplicationId { get; set; }

        [SqlField("ApplicationPath", typeof(FrameworkSessionPermissionDisplay_ApplicationPath))]
        public string ApplicationPath { get; set; }

        [SqlField("ApplicationTypeId", typeof(FrameworkSessionPermissionDisplay_ApplicationTypeId))]
        public int? ApplicationTypeId { get; set; }

        [SqlField("ApplicationTypeName", typeof(FrameworkSessionPermissionDisplay_ApplicationTypeName))]
        public string ApplicationTypeName { get; set; }

        [SqlField("ApplicationTypeIsExist", typeof(FrameworkSessionPermissionDisplay_ApplicationTypeIsExist))]
        public bool? ApplicationTypeIsExist { get; set; }

        [SqlField("PermissionId", typeof(FrameworkSessionPermissionDisplay_PermissionId))]
        public int? PermissionId { get; set; }

        [SqlField("PermissionName", typeof(FrameworkSessionPermissionDisplay_PermissionName))]
        public string PermissionName { get; set; }

        [SqlField("PermissionIsExist", typeof(FrameworkSessionPermissionDisplay_PermissionIsExist))]
        public bool? PermissionIsExist { get; set; }
    }

    public class FrameworkSessionPermissionDisplay_SessionId : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_Session : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_UserId : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_UserName : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_UserIsBuiltIn : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_UserIsBuiltInExist : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_ApplicationId : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_ApplicationPath : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_ApplicationTypeId : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_ApplicationTypeName : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_ApplicationTypeIsExist : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_PermissionId : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_PermissionName : Cell<FrameworkSessionPermissionDisplay> { }

    public class FrameworkSessionPermissionDisplay_PermissionIsExist : Cell<FrameworkSessionPermissionDisplay> { }

    [SqlTable("dbo", "FrameworkTable")]
    public class FrameworkTable : Row
    {
        [SqlField("Id", typeof(FrameworkTable_Id), true)]
        public int Id { get; set; }

        [SqlField("TableNameCSharp", typeof(FrameworkTable_TableNameCSharp))]
        public string TableNameCSharp { get; set; }

        [SqlField("TableNameSql", typeof(FrameworkTable_TableNameSql))]
        public string TableNameSql { get; set; }

        [SqlField("IsExist", typeof(FrameworkTable_IsExist))]
        public bool IsExist { get; set; }
    }

    public class FrameworkTable_Id : Cell<FrameworkTable> { }

    public class FrameworkTable_TableNameCSharp : Cell<FrameworkTable> { }

    public class FrameworkTable_TableNameSql : Cell<FrameworkTable> { }

    public class FrameworkTable_IsExist : Cell<FrameworkTable> { }
}
